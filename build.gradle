plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'com.google.protobuf' version '0.8.17'
    id 'java'
}

group = 'net.silnote.joker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def grpcVersion = '1.48.1' // CURRENT_GRPC_VERSION
def protocVersion = '3.21.1'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.opentracing.contrib:opentracing-spring-jaeger-web-starter:3.3.1'
    implementation 'org.springframework:spring-webmvc:5.3.22'
    implementation 'io.opentracing.contrib:opentracing-grpc:0.2.3'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.github.mweirauch:micrometer-jvm-extras:0.2.2'
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-xds:${grpcVersion}"
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.slf4j:slf4j-log4j12:2.0.0'
    implementation 'me.dinowernli:java-grpc-prometheus:0.5.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java.srcDirs += "build/generated/source"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
